    if 0 < whatwillhappen < ps:
        if mapWidth < moveTo(turning[i][0], turning[i][1], mapWidth)[0] < (mapWidth * mapHeight) - mapWidth:
            turning[i] = moveTo(turning[i][0], turning[i][1], mapWidth)
            world[turning[i][0]] = 1
        else:
            turning.pop(i)






def generateWorld2(mapWidth, mapHeight):
    ps = 40     # probability straight
    pcr = 20    # probability crossing
    pde = 20    # probabiltiy dead end
    pt = 20     # ptobability turn
    world = [0]*(mapWidth*mapHeight)
    entryPoint = random.randint(1, mapWidth-1)
    exitPoint = random.randint(1, mapWidth-1)
    world[entryPoint + mapWidth] = 2
    world[exitPoint + (mapWidth * (mapHeight - 2))] = 3
    turning = [(entryPoint + (mapWidth*2), 3)]   # 1 = up, 2 = left, 3 = down, 4 = right
    world[turning[0][0]] = 1
    while 1:
        if len(turning) == 0:
            if checkValidity(world):
                return world
            else:
                generateWorld(mapWidth, mapHeight)
        for i in range(len(turning)):
            whatwillhappen = random.randint(0, 100)
            if 0 < whatwillhappen < ps:
                if mapWidth < moveTo(turning[i][0], turning[i][1], mapWidth)[0] < (mapWidth*mapHeight)-mapWidth:
                    turning[i] = moveTo(turning[i][0], turning[i][1], mapWidth)
                    world[turning[i][0]] = 1
                else:
                    turning.pop(i)